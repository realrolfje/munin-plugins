#!/usr/bin/python2.7
#
# Derives Wattage from Watt-hour meter readings from
# the AM550 Smart Energy meter.
#
import sys
import serial
import datetime

logfile = '/var/log/munin/smartmeter_totals.log'

def logdata(fields):
    current_datetime = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    strfields=[str(item) for item in fields]
    line = current_datetime + ';' + (';'.join(strfields)) + '\n'
    with open(logfile, 'a') as file:
        file.write(line)


def readserial():
    with serial.Serial(
        port='/dev/ttyAMA0',
        baudrate = 115200,
        parity=serial.PARITY_NONE,
        stopbits=serial.STOPBITS_ONE,
        bytesize=serial.EIGHTBITS,
        timeout=1
    ) as ser:
        readings={}
        while len(readings) < 3:
            x = ser.readline()
            if x[0:7] == "1-0:1.7":
                readings["huidig"] = float(x[10:16])*1000
            if x[0:9] == "1-0:1.8.1":
                readings["T1"] = float(x[10:19])*1000
            if x[0:9] == "1-0:1.8.2":
                readings["T2"] = float(x[10:19])*1000
        return readings

def main():
    if 'config' in sys.argv:
        print "graph_title Elektra verbruik obv meterstand, in Watt"
        print "graph_args --base 1000 -l 0"
        print "graph_vlabel Watt"
        print "graph_scale no"
        print "graph_total Total"
        print "graph_category sensors"
        print "graph_period hour"
        print "t1.label Laag tarief"
        print "t1.type DERIVE"
        print "t1.draw AREA"
        print "t1.min 0"
        print "t2.label Hoog tarief"
        print "t2.type DERIVE"
        print "t2.draw STACK"
        print "t2.min 0"


    readings = readserial()

    t1 = int(round(readings["T1"]))
    t2 = int(round(readings["T2"]))

    logdata([t1,t2])
    print "t1.value", t1
    print "t2.value", t2

if __name__ == "__main__":
    main()
