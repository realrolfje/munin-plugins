#!/usr/bin/env python
#
#
import sys
import requests
import xml.etree.ElementTree as ET

fritzbox_ip='10.0.0.1'

def printDataRate(ip):
  url = "http://%s:49000/igdupnp/control/WANCommonIFC1" % ip
  body = "<?xml version='1.0' encoding='utf-8'?> <s:Envelope s:encodingStyle='http://schemas.xmlsoap.org/soap/encoding/' xmlns:s='http://schemas.xmlsoap.org/soap/envelope/'> <s:Body> <u:GetAddonInfos xmlns:u='urn:schemas-upnp-org:service:WANCommonInterfaceConfig:1' /> </s:Body> </s:Envelope>"
  headers = { 
    "Content-Type": "text/xml; charset=\"utf-8\"",
    "SoapAction"  : "urn:schemas-upnp-org:service:WANCommonInterfaceConfig:1#GetAddonInfos",
  }

  response = requests.post(url, data=body, headers=headers)
  if response.status_code == 200:
    responseXML = response.text
    myroot = ET.fromstring(responseXML)
    element = myroot[0].find('{urn:schemas-upnp-org:service:WANCommonInterfaceConfig:1}GetAddonInfosResponse')
    #print("ByteSendRate.value %s"       % element.find('NewByteSendRate').text)
    #print("ByteReceiveRate.value %s"    % element.find('NewByteReceiveRate').text)
    print("TotalBitsSent.value %s"     % str(int(element.find('NewTotalBytesSent').text) * 8 / 1000000))
    print("TotalBitsReceived.value %s" % str(int(element.find('NewTotalBytesReceived').text) * 8 / 1000000))
  else:
    print('ERROR %d',response.status_code)

def printBandwith(ip):
  url = "http://%s:49000/igdupnp/control/WANCommonIFC1" % ip
  body = "<?xml version='1.0' encoding='utf-8'?> <s:Envelope s:encodingStyle='http://schemas.xmlsoap.org/soap/encoding/' xmlns:s='http://schemas.xmlsoap.org/soap/envelope/'> <s:Body> <u:GetCommonLinkProperties xmlns:u='urn:schemas-upnp-org:service:WANCommonInterfaceConfig:1' /> </s:Body> </s:Envelope>"
  headers = { 
    "Content-Type": "text/xml; charset=\"utf-8\"",
    "SoapAction"  : "urn:schemas-upnp-org:service:WANCommonInterfaceConfig:1#GetCommonLinkProperties",
  }

  response = requests.post(url, data=body, headers=headers)
  if response.status_code == 200:
    responseXML = response.text
    myroot = ET.fromstring(responseXML)
    element = myroot[0].find('{urn:schemas-upnp-org:service:WANCommonInterfaceConfig:1}GetCommonLinkPropertiesResponse')
    print("UpstreamMaxBitRate.value %s"   % str(int(element.find('NewLayer1UpstreamMaxBitRate').text) / 1000000))
    print("DownstreamMaxBitRate.value %s" % str(int(element.find('NewLayer1DownstreamMaxBitRate').text) / 1000000))
  else:
    print('ERROR %d',response.status_code)

def main():
    if 'config' in sys.argv:
        print("graph_title Fritzbox Data Rates")
        print("graph_args --base 1000 -l 0")
        print("graph_vlabel Mbit/s")
        print("graph_scale no")
        print("graph_category sensors")
        print("graph_period second")

        #print("ByteSendRate.label Send rate (bytes)")
        #print("ByteSendRate.type GAUGE")
        #print("ByteSendRate.draw LINE")
        #print("ByteSendRate.min 0")

        #print("ByteReceiveRate.label Receive rate (bytes)")
        #print("ByteReceiveRate.type GAUGE")
        #print("ByteReceiveRate.draw LINE")
        #print("ByteReceiveRate.min 0")

        print("TotalBitsSent.label Sent")
        print("TotalBitsSent.type DERIVE")
        print("TotalBitsSent.draw LINE")
        print("TotalBitsSent.colour d6ac04")
        print("TotalBitsSent.min 0")

        print("TotalBitsReceived.label Received")
        print("TotalBitsReceived.type DERIVE")
        print("TotalBitsReceived.draw LINE")
        print("TotalBitsReceived.colour 8537d3")
        print("TotalBitsReceived.min 0")

        print("UpstreamMaxBitRate.label Upstream bandwith")
        print("UpstreamMaxBitRate.type GAUGE")
        print("UpstreamMaxBitRate.draw LINE")
        print("UpstreamMaxBitRate.colour d66904")
        print("UpstreamMaxBitRate.min 0")

        print("DownstreamMaxBitRate.label Downstream bandwith")
        print("DownstreamMaxBitRate.type GAUGE")
        print("DownstreamMaxBitRate.draw LINE")
        print("DownstreamMaxBitRate.colour 161baa")
        print("DownstreamMaxBitRate.min 0")

    printDataRate(fritzbox_ip)
    printBandwith(fritzbox_ip)

if __name__ == "__main__":
    main()