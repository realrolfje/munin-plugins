#!/usr/bin/python
#
# Reads temperature from 1-wire DS18B20 temperature
# sensors.
#
# Enable 1-Wire in raspi-config advanced menu. 
# 
# Add to rc.local:
# sudo modprobe w1-gpio
# sudo modprobe w1-therm
#
# See https://learn.adafruit.com/adafruits-raspberry-pi-lesson-11-ds18b20-temperature-sensing/ds18b20
#
#
import sys
import os
from os import listdir
from os.path import isfile

w1dir = '/sys/bus/w1/devices'

# Fetch all temperature sensors and labels
sensors = {}
labels = {}
for f in listdir(w1dir):
    sensor = f.replace('-','_')
    if sensor in os.environ:
        labels[sensor] = os.environ[sensor]
    else:
        labels[sensor] = sensor
    f = w1dir + '/' + f + '/w1_slave'
    if isfile(f):
        sensors[sensor] = f

def read_temp_raw(device_file):
    f = open(device_file, 'r')
    lines = f.readlines()
    f.close()
    return lines
 
def read_temp(device_file):
    lines = read_temp_raw(device_file)
    while lines[0].strip()[-3:] != 'YES':
        time.sleep(0.2)
        lines = read_temp_raw()
    equals_pos = lines[1].find('t=')
    if equals_pos != -1:
        temp_string = lines[1][equals_pos+2:]
        temp_c = float(temp_string) / 1000.0
        return temp_c

if len(sys.argv) > 1 and (str(sys.argv[1])) == 'config':
    print 'graph_title Temperature'
    print 'graph_args --lower-limit 0 --base 1000'
    print 'graph_vlabel Celcius'
    print 'graph_category sensors'
    print 'graph_info Temperature in degrees celcius'
    print 'graph_period minute'

    for key, value in sensors.iteritems():
        print key + '.label ' + (labels[key] if labels[key] else key)        
        print key + '.type GAUGE'
        print key + '.draw LINE' 

for key, value in sensors.iteritems():
    print key + '.value ' + str(read_temp(value))
